\__ProgramNode [<program>]
	\__FuncDeclarationNode: function operate : None => <body> [<statement>]
		Params
		('x', None)
		('y', None)
		Body
		\__BlockNode [<expression>]
			\__PrintNode [<expression>]
				\__PlusNode [<expression>]
					\__IdentifierNode: x : None
					\__IdentifierNode: y : None
			\__PrintNode [<expression>]
				\__MinusNode [<expression>]
					\__IdentifierNode: x : None
					\__IdentifierNode: y : None
			\__PrintNode [<expression>]
				\__StarNode [<expression>]
					\__IdentifierNode: x : None
					\__IdentifierNode: y : None
			\__PrintNode [<expression>]
				\__DivNode [<expression>]
					\__IdentifierNode: x : None
					\__IdentifierNode: y : None
	\__BlockNode [<expression>]
		\__CallNode operate   [<expression>]
			\_ Arguments
				\__NumberNode: 6
				\__NumberNode: 3
		\__PrintNode [<expression>]
			\__MinusNode [<expression>]
				\__PlusNode [<expression>]
					\__NumberNode: 1
					\__NumberNode: 2
				\__StarNode [<expression>]
					\__StarNode [<expression>]
						\__NumberNode: 3
						\__NumberNode: 4
					\__NumberNode: 5
		\__LetNode [<expression>]
			\__AssignNode:
				\__IdentifierNode: a : None
				\__NumberNode: 6
			\__LetNode [<expression>]
				\__AssignNode:
					\__IdentifierNode: b : None
					\__StarNode [<expression>]
						\__IdentifierNode: a : None
						\__NumberNode: 7
				\__PrintNode [<expression>]
					\__IdentifierNode: b : None
		\__LetNode [<expression>]
			\__AssignNode:
				\__IdentifierNode: a : None
				\__NumberNode: 5
			\__LetNode [<expression>]
				\__AssignNode:
					\__IdentifierNode: b : None
					\__NumberNode: 10
				\__LetNode [<expression>]
					\__AssignNode:
						\__IdentifierNode: c : None
						\__NumberNode: 20
					\__BlockNode [<expression>]
						\__PrintNode [<expression>]
							\__PlusNode [<expression>]
								\__IdentifierNode: a : None
								\__IdentifierNode: b : None
						\__PrintNode [<expression>]
							\__StarNode [<expression>]
								\__IdentifierNode: b : None
								\__IdentifierNode: c : None
						\__PrintNode [<expression>]
							\__DivNode [<expression>]
								\__IdentifierNode: c : None
								\__IdentifierNode: a : None
		\__BlockNode [<expression>]
			\__LetNode [<expression>]
				\__AssignNode:
					\__IdentifierNode: b : None
					\__NumberNode: 7
				\__PrintNode [<expression>]
					\__IdentifierNode: b : None
			\__LetNode [<expression>]
				\__AssignNode:
					\__IdentifierNode: a : None
					\__NumberNode: 20
				\__BlockNode [<expression>]
					\__PrintNode [<expression>]
						\__IdentifierNode: a : None
		\__LetNode [<expression>]
			\__AssignNode:
				\__IdentifierNode: a : None
				\__NumberNode: 0
			\__BlockNode [<expression>]
				\__PrintNode [<expression>]
					\__IdentifierNode: a : None
				\DestructNode   [<expression>]
					\__IdentifierNode: a : None
					\__NumberNode: 1
				\__PrintNode [<expression>]
					\__IdentifierNode: a : None
		\__LetNode [<expression>]
			\__AssignNode:
				\__IdentifierNode: x : None
				\__NumberNode: 10
			\__BlockNode [<expression>]
				\__IfNode  [<expression>]
					\_ Condition
						\__EQNode [<expression>]
							\__IdentifierNode: x : None
							\__NumberNode: 10
					\_ Body
						\__BlockNode [<expression>]
							\__PrintNode [<expression>]
								\__PlusNode [<expression>]
									\__IdentifierNode: x : None
									\__NumberNode: 3
					\_ Else Body
						\__BlockNode [<expression>]
							\__PrintNode [<expression>]
								\__IdentifierNode: x : None
		\__LetNode [<expression>]
			\__AssignNode:
				\__IdentifierNode: x : None
				\__NumberNode: 5
			\__BlockNode [<expression>]
				\__IfNode  [<expression>]
					\_ Condition
						\__EQNode [<expression>]
							\__IdentifierNode: x : None
							\__NumberNode: 10
					\_ Body
						\__PrintNode [<expression>]
							\__PlusNode [<expression>]
								\__IdentifierNode: x : None
								\__NumberNode: 3
					\_ Else Body
						\__PrintNode [<expression>]
							\__IdentifierNode: x : None
		\__LetNode [<expression>]
			\__AssignNode:
				\__IdentifierNode: x : None
				\__NumberNode: 5
			\__BlockNode [<expression>]
				\__IfNode  [<expression>]
					\_ Condition
						\__EQNode [<expression>]
							\__IdentifierNode: x : None
							\__NumberNode: 10
					\_ Body
						\__PrintNode [<expression>]
							\__PlusNode [<expression>]
								\__IdentifierNode: x : None
								\__NumberNode: 3
					\_ Else Body
						\__BlockNode [<expression>]
							\__PrintNode [<expression>]
								\__IdentifierNode: x : None
		\__LetNode [<expression>]
			\__AssignNode:
				\__IdentifierNode: x : None
				\__NumberNode: 5
			\__IfNode  [<expression>]
				\_ Condition
					\__EQNode [<expression>]
						\__IdentifierNode: x : None
						\__NumberNode: 10
				\_ Body
					\__PrintNode [<expression>]
						\__PlusNode [<expression>]
							\__IdentifierNode: x : None
							\__NumberNode: 3
				\_ Else Body
					\__PrintNode [<expression>]
						\__IdentifierNode: x : None
		\__PrintNode [<expression>]
			\__StringNode: "The message is \"Hello World\""
		\__BlockNode [<expression>]
			\__PrintNode [<expression>]
				\__NumberNode: 42
			\__PrintNode [<expression>]
				\__SinNode   [<expression>]
					\__DivNode [<expression>]
						\__NumberNode: PI
						\__NumberNode: 2
			\__PrintNode [<expression>]
				\__StringNode: "Hello World"
		\__BlockNode [<expression>]
			\__PrintNode [<expression>]
				\__NumberNode: 5
			\__PrintNode [<expression>]
				\__SinNode   [<expression>]
					\__DivNode [<expression>]
						\__NumberNode: PI
						\__NumberNode: 2
			\__PrintNode [<expression>]
				\__PlusNode [<expression>]
					\__NumberNode: 3
					\__StarNode [<expression>]
						\__NumberNode: 4.5
						\__NumberNode: 10
			\__PrintNode [<expression>]
				\__StarNode [<expression>]
					\__PlusNode [<expression>]
						\__NumberNode: 3
						\__NumberNode: 4
					\__NumberNode: 10.5
			\__PrintNode [<expression>]
				\__OrNode [<expression>]
					\__AndNode [<expression>]
						\__BoolNode: true
						\__BoolNode: false
					\__BoolNode: true
			\__PrintNode [<expression>]
				\__GENode [<expression>]
					\__NumberNode: 3.0
					\__NumberNode: 2
			\__PrintNode [<expression>]
				\__ConcatNode [<expression>]
					\__StringNode: "Hello"
					\__StringNode: " World!"
			\__PrintNode [<expression>]
				\__LogNode [<expression>]
					\__NumberNode: 10
					\__NumberNode: 100
			\__PrintNode [<expression>]
				\__PlusNode [<expression>]
					\__NumberNode: 3.14
					\__NumberNode: 2.71
			\__PrintNode [<expression>]
				\__NotNode: <nodes_types.hulk_types.EQNode object at 0x7fd29e774c20>
			\__PrintNode [<expression>]
				\__NENode [<expression>]
					\__NumberNode: 10
					\__NumberNode: 20
			\__PrintNode [<expression>]
				\__SqrtNode   [<expression>]
					\__NumberNode: 4
			\__PrintNode [<expression>]
				\__ExpNode   [<expression>]
					\__NumberNode: 1
			\__PrintNode [<expression>]
				\__DivNode [<expression>]
					\__NumberNode: 4
					\__NumberNode: 2.0
			\__PrintNode [<expression>]
				\__MinusNode [<expression>]
					\__NumberNode: 10
					\__NumberNode: 5
			\__PrintNode [<expression>]
				\__BoolNode: true
			\__PrintNode [<expression>]
				\__BoolNode: false
			\__PrintNode [<expression>]
				\__PlusNode [<expression>]
					\__SinNode   [<expression>]
						\__NumberNode: PI
					\__CosNode   [<expression>]
						\__NumberNode: E
		\__PrintNode [<expression>]
			\__PlusNode [<expression>]
				\__SinNode   [<expression>]
					\__StarNode [<expression>]
						\__NumberNode: 2
						\__NumberNode: PI
				\__CosNode   [<expression>]
					\__DivNode [<expression>]
						\__StarNode [<expression>]
							\__NumberNode: 3
							\__NumberNode: PI
						\__NumberNode: 2
		\__BlockNode [<expression>]
			\__LetNode [<expression>]
				\__AssignNode:
					\__IdentifierNode: x : None
					\__NumberNode: 5
				\__BlockNode [<expression>]
					\__AssignNode:
						\__IdentifierNode: x : None
						\__MinusNode [<expression>]
							\__IdentifierNode: x : None
							\__NumberNode: 1
					\__WhileNode [<expression>]
						\_ Condition
							\__LTNode [<expression>]
								\DestructNode   [<expression>]
									\__IdentifierNode: x : None
									\__PlusNode [<expression>]
										\__IdentifierNode: x : None
										\__NumberNode: 1
								\__NumberNode: 10
						\_ Body
							\__BlockNode [<expression>]
								\__PrintNode [<expression>]
									\__IdentifierNode: x : None
			\__LetNode [<expression>]
				\__AssignNode:
					\__IdentifierNode: a : None
					\__NumberNode: 0
				\__BlockNode [<expression>]
					\__AssignNode:
						\__IdentifierNode: a : None
						\__MinusNode [<expression>]
							\__IdentifierNode: a : None
							\__NumberNode: 1
					\__WhileNode [<expression>]
						\_ Condition
							\__LTNode [<expression>]
								\DestructNode   [<expression>]
									\__IdentifierNode: a : None
									\__PlusNode [<expression>]
										\__IdentifierNode: a : None
										\__NumberNode: 1
								\__NumberNode: 10
						\_ Body
							\__BlockNode [<expression>]
								\__LetNode [<expression>]
									\__AssignNode:
										\__IdentifierNode: mod : None
										\__ModNode [<expression>]
											\__IdentifierNode: a : None
											\__NumberNode: 3
									\__PrintNode [<expression>]
										\__IfNode  [<expression>]
											\_ Condition
												\__EQNode [<expression>]
													\__IdentifierNode: mod : None
													\__NumberNode: 0
											\_ Body
												\__StringNode: "Magic"
											\_ Elif Condition 0
												\__EQNode [<expression>]
													\__ModNode [<expression>]
														\__IdentifierNode: mod : None
														\__NumberNode: 3
													\__NumberNode: 1
											\_ Elif Body 0
												\__StringNode: "Woke"
											\_ Else Body
												\__StringNode: "Dumb"
		\__LetNode [<expression>]
			\__AssignNode:
				\__IdentifierNode: a : None
				\__NumberNode: 10
			\__WhileNode [<expression>]
				\_ Condition
					\__GENode [<expression>]
						\__IdentifierNode: a : None
						\__NumberNode: 0
				\_ Body
					\__BlockNode [<expression>]
						\__PrintNode [<expression>]
							\__IdentifierNode: a : None
						\DestructNode   [<expression>]
							\__IdentifierNode: a : None
							\__MinusNode [<expression>]
								\__IdentifierNode: a : None
								\__NumberNode: 1