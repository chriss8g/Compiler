
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'statementleftORleftANDleftEQNEleftGTLTGELEleftPLUSMINUSleftTIMESDIVIDEPOWAND ARROW ASIGN ASIGN2 BOOL COMA CONCAT COS DIVIDE E EQ EXP FUNCTION GE GT ID IN LBRACE LE LET LOG LPAREN LT MINUS NE NUMBER OR PI PLUS POW PRINT RAND RBRACE RPAREN SEMICOLON SIN SQRT STRING TIMESasig : ID ASIGN expressionasigs : asigs COMA asig\n            | asigstatement : LET asigs IN statementexpression : LET asigs IN expressionstatement : LBRACE statements RBRACEfunction : ID LPAREN parameters RPARENfunctionDef : FUNCTION ID LPAREN parameters RPAREN ARROW expression SEMICOLON\n                | FUNCTION ID LPAREN RPAREN ARROW expression SEMICOLONfunctionDef : FUNCTION ID LPAREN parameters RPAREN LBRACE statements RBRACE\n                | FUNCTION ID LPAREN RPAREN LBRACE statements RBRACEparameters : parameters COMA expression\n                  | emptyparameters : expressionempty :statements : statements statement\n                  | statementexpression : functionstatement : expression SEMICOLON\n                    | functionDefexpression : factorexpression : expression PLUS expression\n                  | expression MINUS expressionexpression : expression TIMES expression\n            | expression DIVIDE expression\n            | expression POW expressionexpression : LPAREN expression RPARENfactor : NUMBER\n              | PI\n              | E\n              | BOOL\n              | STRING\n              | IDexpression : SIN LPAREN expression RPAREN\n              | COS LPAREN expression RPAREN\n              | SQRT LPAREN expression RPAREN\n              | EXP LPAREN expression RPAREN\n              | LOG LPAREN expression COMA expression RPAREN\n              | RAND LPAREN RPAREN\n              | PRINT LPAREN expression RPARENexpression : expression EQ expression\n              | expression GT expression\n              | expression LT expression\n              | expression GE expression\n              | expression LE expression\n              | expression NE expressionexpression : expression AND expression\n              | expression OR expressionexpression : expression CONCAT expression'
    
_lr_action_items = {'LET':([0,3,5,8,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,47,48,49,51,53,54,56,57,58,82,86,90,95,100,104,105,108,109,111,113,114,115,116,117,],[2,2,-20,44,2,-17,-19,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,2,44,-6,-16,44,-4,44,44,44,44,2,44,2,2,2,-9,-11,-8,-10,]),'LBRACE':([0,3,5,26,27,28,54,57,58,86,98,103,105,109,111,113,114,115,116,117,],[3,3,-20,3,-17,-19,3,-6,-16,-4,105,109,3,3,3,3,-9,-11,-8,-10,]),'LPAREN':([0,3,5,8,9,10,11,12,13,14,15,17,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,47,48,49,51,52,53,54,56,57,58,82,86,90,95,100,104,105,108,109,111,113,114,115,116,117,],[8,8,-20,8,45,46,47,48,49,50,51,53,8,-17,-19,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,82,8,8,8,-6,-16,8,-4,8,8,8,8,8,8,8,8,8,-9,-11,-8,-10,]),'SIN':([0,3,5,8,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,47,48,49,51,53,54,56,57,58,82,86,90,95,100,104,105,108,109,111,113,114,115,116,117,],[9,9,-20,9,9,-17,-19,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,-6,-16,9,-4,9,9,9,9,9,9,9,9,9,-9,-11,-8,-10,]),'COS':([0,3,5,8,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,47,48,49,51,53,54,56,57,58,82,86,90,95,100,104,105,108,109,111,113,114,115,116,117,],[10,10,-20,10,10,-17,-19,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-6,-16,10,-4,10,10,10,10,10,10,10,10,10,-9,-11,-8,-10,]),'SQRT':([0,3,5,8,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,47,48,49,51,53,54,56,57,58,82,86,90,95,100,104,105,108,109,111,113,114,115,116,117,],[11,11,-20,11,11,-17,-19,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-6,-16,11,-4,11,11,11,11,11,11,11,11,11,-9,-11,-8,-10,]),'EXP':([0,3,5,8,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,47,48,49,51,53,54,56,57,58,82,86,90,95,100,104,105,108,109,111,113,114,115,116,117,],[12,12,-20,12,12,-17,-19,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-6,-16,12,-4,12,12,12,12,12,12,12,12,12,-9,-11,-8,-10,]),'LOG':([0,3,5,8,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,47,48,49,51,53,54,56,57,58,82,86,90,95,100,104,105,108,109,111,113,114,115,116,117,],[13,13,-20,13,13,-17,-19,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-6,-16,13,-4,13,13,13,13,13,13,13,13,13,-9,-11,-8,-10,]),'RAND':([0,3,5,8,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,47,48,49,51,53,54,56,57,58,82,86,90,95,100,104,105,108,109,111,113,114,115,116,117,],[14,14,-20,14,14,-17,-19,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-6,-16,14,-4,14,14,14,14,14,14,14,14,14,-9,-11,-8,-10,]),'PRINT':([0,3,5,8,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,47,48,49,51,53,54,56,57,58,82,86,90,95,100,104,105,108,109,111,113,114,115,116,117,],[15,15,-20,15,15,-17,-19,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-6,-16,15,-4,15,15,15,15,15,15,15,15,15,-9,-11,-8,-10,]),'FUNCTION':([0,3,5,26,27,28,54,57,58,86,105,109,111,113,114,115,116,117,],[16,16,-20,16,-17,-19,16,-6,-16,-4,16,16,16,16,-9,-11,-8,-10,]),'ID':([0,2,3,5,8,16,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,51,53,54,55,56,57,58,82,86,90,95,100,104,105,108,109,111,113,114,115,116,117,],[17,25,17,-20,17,52,17,-17,-19,17,17,17,17,17,17,17,17,17,17,17,17,17,17,25,17,17,17,17,17,17,17,17,25,17,-6,-16,17,-4,17,17,17,17,17,17,17,17,17,-9,-11,-8,-10,]),'NUMBER':([0,3,5,8,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,47,48,49,51,53,54,56,57,58,82,86,90,95,100,104,105,108,109,111,113,114,115,116,117,],[18,18,-20,18,18,-17,-19,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-6,-16,18,-4,18,18,18,18,18,18,18,18,18,-9,-11,-8,-10,]),'PI':([0,3,5,8,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,47,48,49,51,53,54,56,57,58,82,86,90,95,100,104,105,108,109,111,113,114,115,116,117,],[19,19,-20,19,19,-17,-19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-6,-16,19,-4,19,19,19,19,19,19,19,19,19,-9,-11,-8,-10,]),'E':([0,3,5,8,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,47,48,49,51,53,54,56,57,58,82,86,90,95,100,104,105,108,109,111,113,114,115,116,117,],[20,20,-20,20,20,-17,-19,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-6,-16,20,-4,20,20,20,20,20,20,20,20,20,-9,-11,-8,-10,]),'BOOL':([0,3,5,8,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,47,48,49,51,53,54,56,57,58,82,86,90,95,100,104,105,108,109,111,113,114,115,116,117,],[21,21,-20,21,21,-17,-19,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-6,-16,21,-4,21,21,21,21,21,21,21,21,21,-9,-11,-8,-10,]),'STRING':([0,3,5,8,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,47,48,49,51,53,54,56,57,58,82,86,90,95,100,104,105,108,109,111,113,114,115,116,117,],[22,22,-20,22,22,-17,-19,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-6,-16,22,-4,22,22,22,22,22,22,22,22,22,-9,-11,-8,-10,]),'$end':([1,5,28,57,86,114,115,116,117,],[0,-20,-19,-6,-4,-9,-11,-8,-10,]),'SEMICOLON':([4,6,7,17,18,19,20,21,22,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,80,87,91,92,93,94,96,99,101,107,110,112,],[28,-18,-21,-33,-28,-29,-30,-31,-32,-22,-23,-24,-25,-26,-41,-42,-43,-44,-45,-46,-47,-48,-49,-27,-39,28,-34,-35,-36,-37,-40,-7,-5,-38,114,116,]),'PLUS':([4,6,7,17,18,19,20,21,22,43,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,84,87,89,91,92,93,94,96,99,101,102,106,107,110,112,],[29,-18,-21,-33,-28,-29,-30,-31,-32,29,-22,-23,-24,-25,-26,29,29,29,29,29,29,29,29,29,-27,29,29,29,29,29,-39,29,29,29,29,-34,-35,-36,-37,-40,-7,29,29,29,-38,29,29,]),'MINUS':([4,6,7,17,18,19,20,21,22,43,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,84,87,89,91,92,93,94,96,99,101,102,106,107,110,112,],[30,-18,-21,-33,-28,-29,-30,-31,-32,30,-22,-23,-24,-25,-26,30,30,30,30,30,30,30,30,30,-27,30,30,30,30,30,-39,30,30,30,30,-34,-35,-36,-37,-40,-7,30,30,30,-38,30,30,]),'TIMES':([4,6,7,17,18,19,20,21,22,43,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,84,87,89,91,92,93,94,96,99,101,102,106,107,110,112,],[31,-18,-21,-33,-28,-29,-30,-31,-32,31,31,31,-24,-25,-26,31,31,31,31,31,31,31,31,31,-27,31,31,31,31,31,-39,31,31,31,31,-34,-35,-36,-37,-40,-7,31,31,31,-38,31,31,]),'DIVIDE':([4,6,7,17,18,19,20,21,22,43,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,84,87,89,91,92,93,94,96,99,101,102,106,107,110,112,],[32,-18,-21,-33,-28,-29,-30,-31,-32,32,32,32,-24,-25,-26,32,32,32,32,32,32,32,32,32,-27,32,32,32,32,32,-39,32,32,32,32,-34,-35,-36,-37,-40,-7,32,32,32,-38,32,32,]),'POW':([4,6,7,17,18,19,20,21,22,43,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,84,87,89,91,92,93,94,96,99,101,102,106,107,110,112,],[33,-18,-21,-33,-28,-29,-30,-31,-32,33,33,33,-24,-25,-26,33,33,33,33,33,33,33,33,33,-27,33,33,33,33,33,-39,33,33,33,33,-34,-35,-36,-37,-40,-7,33,33,33,-38,33,33,]),'EQ':([4,6,7,17,18,19,20,21,22,43,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,84,87,89,91,92,93,94,96,99,101,102,106,107,110,112,],[34,-18,-21,-33,-28,-29,-30,-31,-32,34,-22,-23,-24,-25,-26,-41,-42,-43,-44,-45,-46,34,34,34,-27,34,34,34,34,34,-39,34,34,34,34,-34,-35,-36,-37,-40,-7,34,34,34,-38,34,34,]),'GT':([4,6,7,17,18,19,20,21,22,43,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,84,87,89,91,92,93,94,96,99,101,102,106,107,110,112,],[35,-18,-21,-33,-28,-29,-30,-31,-32,35,-22,-23,-24,-25,-26,35,-42,-43,-44,-45,35,35,35,35,-27,35,35,35,35,35,-39,35,35,35,35,-34,-35,-36,-37,-40,-7,35,35,35,-38,35,35,]),'LT':([4,6,7,17,18,19,20,21,22,43,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,84,87,89,91,92,93,94,96,99,101,102,106,107,110,112,],[36,-18,-21,-33,-28,-29,-30,-31,-32,36,-22,-23,-24,-25,-26,36,-42,-43,-44,-45,36,36,36,36,-27,36,36,36,36,36,-39,36,36,36,36,-34,-35,-36,-37,-40,-7,36,36,36,-38,36,36,]),'GE':([4,6,7,17,18,19,20,21,22,43,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,84,87,89,91,92,93,94,96,99,101,102,106,107,110,112,],[37,-18,-21,-33,-28,-29,-30,-31,-32,37,-22,-23,-24,-25,-26,37,-42,-43,-44,-45,37,37,37,37,-27,37,37,37,37,37,-39,37,37,37,37,-34,-35,-36,-37,-40,-7,37,37,37,-38,37,37,]),'LE':([4,6,7,17,18,19,20,21,22,43,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,84,87,89,91,92,93,94,96,99,101,102,106,107,110,112,],[38,-18,-21,-33,-28,-29,-30,-31,-32,38,-22,-23,-24,-25,-26,38,-42,-43,-44,-45,38,38,38,38,-27,38,38,38,38,38,-39,38,38,38,38,-34,-35,-36,-37,-40,-7,38,38,38,-38,38,38,]),'NE':([4,6,7,17,18,19,20,21,22,43,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,84,87,89,91,92,93,94,96,99,101,102,106,107,110,112,],[39,-18,-21,-33,-28,-29,-30,-31,-32,39,-22,-23,-24,-25,-26,-41,-42,-43,-44,-45,-46,39,39,39,-27,39,39,39,39,39,-39,39,39,39,39,-34,-35,-36,-37,-40,-7,39,39,39,-38,39,39,]),'AND':([4,6,7,17,18,19,20,21,22,43,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,84,87,89,91,92,93,94,96,99,101,102,106,107,110,112,],[40,-18,-21,-33,-28,-29,-30,-31,-32,40,-22,-23,-24,-25,-26,-41,-42,-43,-44,-45,-46,-47,40,40,-27,40,40,40,40,40,-39,40,40,40,40,-34,-35,-36,-37,-40,-7,40,40,40,-38,40,40,]),'OR':([4,6,7,17,18,19,20,21,22,43,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,84,87,89,91,92,93,94,96,99,101,102,106,107,110,112,],[41,-18,-21,-33,-28,-29,-30,-31,-32,41,-22,-23,-24,-25,-26,-41,-42,-43,-44,-45,-46,-47,-48,41,-27,41,41,41,41,41,-39,41,41,41,41,-34,-35,-36,-37,-40,-7,41,41,41,-38,41,41,]),'CONCAT':([4,6,7,17,18,19,20,21,22,43,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,84,87,89,91,92,93,94,96,99,101,102,106,107,110,112,],[42,-18,-21,-33,-28,-29,-30,-31,-32,42,-22,-23,-24,-25,-26,-41,-42,-43,-44,-45,-46,-47,-48,42,-27,42,42,42,42,42,-39,42,42,42,42,-34,-35,-36,-37,-40,-7,42,42,42,-38,42,42,]),'RBRACE':([5,26,27,28,57,58,86,111,113,114,115,116,117,],[-20,57,-17,-19,-6,-16,-4,115,117,-9,-11,-8,-10,]),'RPAREN':([6,7,17,18,19,20,21,22,43,50,53,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,80,81,82,83,84,85,91,92,93,94,96,97,99,101,102,106,107,],[-18,-21,-33,-28,-29,-30,-31,-32,73,80,-15,-22,-23,-24,-25,-26,-41,-42,-43,-44,-45,-46,-47,-48,-49,-27,91,92,93,94,-39,96,98,99,-14,-13,-34,-35,-36,-37,-40,103,-7,-5,107,-12,-38,]),'COMA':([6,7,17,18,19,20,21,22,23,24,53,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,79,80,82,83,84,85,88,89,91,92,93,94,96,97,99,101,106,107,],[-18,-21,-33,-28,-29,-30,-31,-32,55,-3,-15,-22,-23,-24,-25,-26,-41,-42,-43,-44,-45,-46,-47,-48,-49,-27,55,95,-39,-15,100,-14,-13,-2,-1,-34,-35,-36,-37,-40,100,-7,-5,-12,-38,]),'IN':([6,7,17,18,19,20,21,22,23,24,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,80,88,89,91,92,93,94,96,99,101,107,],[-18,-21,-33,-28,-29,-30,-31,-32,54,-3,-22,-23,-24,-25,-26,-41,-42,-43,-44,-45,-46,-47,-48,-49,-27,90,-39,-2,-1,-34,-35,-36,-37,-40,-7,-5,-38,]),'ASIGN':([25,],[56,]),'ARROW':([98,103,],[104,108,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,3,26,54,105,109,111,113,],[1,27,58,86,27,27,58,58,]),'expression':([0,3,8,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,47,48,49,51,53,54,56,82,90,95,100,104,105,108,109,111,113,],[4,4,43,4,59,60,61,62,63,64,65,66,67,68,69,70,71,72,75,76,77,78,79,81,84,87,89,84,101,102,106,110,4,112,4,4,4,]),'functionDef':([0,3,26,54,105,109,111,113,],[5,5,5,5,5,5,5,5,]),'function':([0,3,8,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,47,48,49,51,53,54,56,82,90,95,100,104,105,108,109,111,113,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'factor':([0,3,8,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,47,48,49,51,53,54,56,82,90,95,100,104,105,108,109,111,113,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'asigs':([2,44,],[23,74,]),'asig':([2,44,55,],[24,24,88,]),'statements':([3,105,109,],[26,111,113,]),'parameters':([53,82,],[83,97,]),'empty':([53,82,],[85,85,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('asig -> ID ASIGN expression','asig',3,'p_asig','my_parser.py',34),
  ('asigs -> asigs COMA asig','asigs',3,'p_asigs','my_parser.py',38),
  ('asigs -> asig','asigs',1,'p_asigs','my_parser.py',39),
  ('statement -> LET asigs IN statement','statement',4,'p_multivariables','my_parser.py',46),
  ('expression -> LET asigs IN expression','expression',4,'p_multivariables_expression','my_parser.py',50),
  ('statement -> LBRACE statements RBRACE','statement',3,'p_expression_block','my_parser.py',55),
  ('function -> ID LPAREN parameters RPAREN','function',4,'p_expression_function','my_parser.py',60),
  ('functionDef -> FUNCTION ID LPAREN parameters RPAREN ARROW expression SEMICOLON','functionDef',8,'p_function_inline','my_parser.py',64),
  ('functionDef -> FUNCTION ID LPAREN RPAREN ARROW expression SEMICOLON','functionDef',7,'p_function_inline','my_parser.py',65),
  ('functionDef -> FUNCTION ID LPAREN parameters RPAREN LBRACE statements RBRACE','functionDef',8,'p_function_full','my_parser.py',72),
  ('functionDef -> FUNCTION ID LPAREN RPAREN LBRACE statements RBRACE','functionDef',7,'p_function_full','my_parser.py',73),
  ('parameters -> parameters COMA expression','parameters',3,'p_parameters','my_parser.py',81),
  ('parameters -> empty','parameters',1,'p_parameters','my_parser.py',82),
  ('parameters -> expression','parameters',1,'p_parameters_expression','my_parser.py',91),
  ('empty -> <empty>','empty',0,'p_empty','my_parser.py',95),
  ('statements -> statements statement','statements',2,'p_statements','my_parser.py',100),
  ('statements -> statement','statements',1,'p_statements','my_parser.py',101),
  ('expression -> function','expression',1,'p_function','my_parser.py',108),
  ('statement -> expression SEMICOLON','statement',2,'p_statement','my_parser.py',112),
  ('statement -> functionDef','statement',1,'p_statement','my_parser.py',113),
  ('expression -> factor','expression',1,'p_expression','my_parser.py',117),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','my_parser.py',122),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','my_parser.py',123),
  ('expression -> expression TIMES expression','expression',3,'p_term_binop','my_parser.py',130),
  ('expression -> expression DIVIDE expression','expression',3,'p_term_binop','my_parser.py',131),
  ('expression -> expression POW expression','expression',3,'p_term_binop','my_parser.py',132),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_factor_group','my_parser.py',140),
  ('factor -> NUMBER','factor',1,'p_factor_num_const','my_parser.py',144),
  ('factor -> PI','factor',1,'p_factor_num_const','my_parser.py',145),
  ('factor -> E','factor',1,'p_factor_num_const','my_parser.py',146),
  ('factor -> BOOL','factor',1,'p_factor_num_const','my_parser.py',147),
  ('factor -> STRING','factor',1,'p_factor_num_const','my_parser.py',148),
  ('factor -> ID','factor',1,'p_factor_num_const','my_parser.py',149),
  ('expression -> SIN LPAREN expression RPAREN','expression',4,'p_factor_func','my_parser.py',163),
  ('expression -> COS LPAREN expression RPAREN','expression',4,'p_factor_func','my_parser.py',164),
  ('expression -> SQRT LPAREN expression RPAREN','expression',4,'p_factor_func','my_parser.py',165),
  ('expression -> EXP LPAREN expression RPAREN','expression',4,'p_factor_func','my_parser.py',166),
  ('expression -> LOG LPAREN expression COMA expression RPAREN','expression',6,'p_factor_func','my_parser.py',167),
  ('expression -> RAND LPAREN RPAREN','expression',3,'p_factor_func','my_parser.py',168),
  ('expression -> PRINT LPAREN expression RPAREN','expression',4,'p_factor_func','my_parser.py',169),
  ('expression -> expression EQ expression','expression',3,'p_factor_binop','my_parser.py',179),
  ('expression -> expression GT expression','expression',3,'p_factor_binop','my_parser.py',180),
  ('expression -> expression LT expression','expression',3,'p_factor_binop','my_parser.py',181),
  ('expression -> expression GE expression','expression',3,'p_factor_binop','my_parser.py',182),
  ('expression -> expression LE expression','expression',3,'p_factor_binop','my_parser.py',183),
  ('expression -> expression NE expression','expression',3,'p_factor_binop','my_parser.py',184),
  ('expression -> expression AND expression','expression',3,'p_factor_logicop','my_parser.py',188),
  ('expression -> expression OR expression','expression',3,'p_factor_logicop','my_parser.py',189),
  ('expression -> expression CONCAT expression','expression',3,'p_factor_concat','my_parser.py',194),
]
