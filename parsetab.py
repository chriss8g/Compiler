
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'statementleftORleftANDleftEQNEleftGTLTGELEleftPLUSMINUSMODleftTIMESDIVIDEPOWleftASIGNASIGN2AND ARROW ASIGN ASIGN2 COMA CONCAT COS DIVIDE E ELIF ELSE EQ EXP FALSE FUNCTION GE GT ID IF IN LBRACE LE LET LOG LPAREN LT MINUS MOD NE NOT NUMBER OR PI PLUS POW PRINT RAND RBRACE RPAREN SEMICOLON SIN SQRT STRING TIMES TRUE WHILEstatement : WHILE LPAREN expression RPAREN statementexpression : IF LPAREN expression RPAREN expression elifsExp ELSE expressionstatement : IF LPAREN expression RPAREN statement elifs ELSE statementelifs : empty\n            | ELIF LPAREN expression RPAREN statement\n            | elifs ELIF LPAREN expression RPAREN statementelifsExp : empty\n            | ELIF LPAREN expression RPAREN expression\n            | elifsExp ELIF LPAREN expression RPAREN expressionasig : ID ASIGN expressionasig2 : ID ASIGN2 expressionstatement : asig2 SEMICOLONexpression : asig2asigs : asigs COMA asig\n            | asigstatement : LET asigs IN statementexpression : LET asigs IN expressionstatement : LBRACE statements RBRACE\n                | LBRACE statements RBRACE SEMICOLONfunction : ID LPAREN parameters RPARENfunctionDef : FUNCTION ID LPAREN parameters RPAREN ARROW expression SEMICOLON\n                | FUNCTION ID LPAREN RPAREN ARROW expression SEMICOLONfunctionDef : FUNCTION ID LPAREN parameters RPAREN LBRACE statements RBRACE\n                | FUNCTION ID LPAREN RPAREN LBRACE statements RBRACEparameters : parameters COMA expression\n                  | emptyparameters : expressionempty :statements : statements statement\n                  | statementexpression : functionstatement : expression SEMICOLON\n                    | functionDefexpression : factorexpression : expression PLUS expression\n                  | expression MINUS expressionexpression : expression TIMES expression\n            | expression DIVIDE expression\n            | expression POW expression\n            | expression MOD expressionexpression : LPAREN expression RPARENfactor : NUMBER\n              | PI\n              | E\n              | TRUE\n              | FALSE\n              | STRING\n              | IDexpression : SIN LPAREN expression RPAREN\n              | COS LPAREN expression RPAREN\n              | SQRT LPAREN expression RPAREN\n              | EXP LPAREN expression RPAREN\n              | LOG LPAREN expression COMA expression RPAREN\n              | RAND LPAREN RPAREN\n              | PRINT LPAREN expression RPARENexpression : expression EQ expression\n              | expression GT expression\n              | expression LT expression\n              | expression GE expression\n              | expression LE expression\n              | expression NE expressionexpression : expression AND expression\n              | expression OR expressionexpression : NOT expressionexpression : expression CONCAT expression'
    
_lr_action_items = {'WHILE':([0,8,9,33,50,54,55,87,90,91,104,107,108,112,123,132,142,144,148,152,153,154,158,161,162,166,169,],[2,2,-33,-32,-12,2,-30,2,-18,-29,2,2,-16,-19,-1,2,2,2,2,2,-22,-24,-3,-21,-23,2,2,]),'IF':([0,3,8,9,20,28,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,54,55,56,57,58,59,60,61,62,64,69,87,89,90,91,103,104,106,107,108,112,114,119,123,124,131,132,141,142,144,145,147,148,150,152,153,154,156,158,159,161,162,164,166,167,169,],[5,30,5,-33,30,30,-32,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-12,5,-30,30,30,30,30,30,30,30,30,30,5,30,-18,-29,30,5,30,5,-16,-19,30,30,-1,30,30,5,30,5,5,30,30,5,30,5,-22,-24,30,-3,30,-21,-23,30,5,30,5,]),'LET':([0,3,8,9,20,28,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,54,55,56,57,58,59,60,61,62,64,69,87,89,90,91,103,104,106,107,108,112,114,119,123,124,131,132,141,142,144,145,147,148,150,152,153,154,156,158,159,161,162,164,166,167,169,],[7,32,7,-33,32,32,-32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-12,7,-30,32,32,32,32,32,32,32,32,32,7,32,-18,-29,32,7,32,7,-16,-19,32,32,-1,32,32,7,32,7,7,32,32,7,32,7,-22,-24,32,-3,32,-21,-23,32,7,32,7,]),'LBRACE':([0,8,9,33,50,54,55,87,90,91,104,107,108,112,122,123,130,132,142,144,148,152,153,154,158,161,162,166,169,],[8,8,-33,-32,-12,8,-30,8,-18,-29,8,8,-16,-19,132,-1,142,8,8,8,8,8,-22,-24,-3,-21,-23,8,8,]),'ID':([0,3,7,8,9,20,21,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,54,55,56,57,58,59,60,61,62,64,69,87,88,89,90,91,103,104,106,107,108,112,114,119,123,124,131,132,141,142,144,145,147,148,150,152,153,154,156,158,159,161,162,164,166,167,169,],[10,10,53,10,-33,10,66,10,53,-32,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-12,10,-30,10,10,10,10,10,10,10,10,10,10,53,10,-18,-29,10,10,10,10,-16,-19,10,10,-1,10,10,10,10,10,10,10,10,10,10,10,-22,-24,10,-3,10,-21,-23,10,10,10,10,]),'LPAREN':([0,2,3,5,8,9,10,13,14,15,16,17,18,19,20,28,30,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,54,55,56,57,58,59,60,61,62,64,66,69,87,89,90,91,103,104,106,107,108,112,114,119,123,124,131,132,136,139,141,142,144,145,146,147,148,149,150,152,153,154,156,158,159,161,162,164,166,167,169,],[3,28,3,49,3,-33,57,58,59,60,61,62,63,64,3,3,69,-32,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-12,3,-30,3,3,3,3,3,3,3,3,103,3,3,3,-18,-29,3,3,3,3,-16,-19,3,3,-1,3,3,3,147,150,3,3,3,3,156,3,3,159,3,3,-22,-24,3,-3,3,-21,-23,3,3,3,3,]),'SIN':([0,3,8,9,20,28,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,54,55,56,57,58,59,60,61,62,64,69,87,89,90,91,103,104,106,107,108,112,114,119,123,124,131,132,141,142,144,145,147,148,150,152,153,154,156,158,159,161,162,164,166,167,169,],[13,13,13,-33,13,13,-32,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-12,13,-30,13,13,13,13,13,13,13,13,13,13,13,-18,-29,13,13,13,13,-16,-19,13,13,-1,13,13,13,13,13,13,13,13,13,13,13,-22,-24,13,-3,13,-21,-23,13,13,13,13,]),'COS':([0,3,8,9,20,28,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,54,55,56,57,58,59,60,61,62,64,69,87,89,90,91,103,104,106,107,108,112,114,119,123,124,131,132,141,142,144,145,147,148,150,152,153,154,156,158,159,161,162,164,166,167,169,],[14,14,14,-33,14,14,-32,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-12,14,-30,14,14,14,14,14,14,14,14,14,14,14,-18,-29,14,14,14,14,-16,-19,14,14,-1,14,14,14,14,14,14,14,14,14,14,14,-22,-24,14,-3,14,-21,-23,14,14,14,14,]),'SQRT':([0,3,8,9,20,28,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,54,55,56,57,58,59,60,61,62,64,69,87,89,90,91,103,104,106,107,108,112,114,119,123,124,131,132,141,142,144,145,147,148,150,152,153,154,156,158,159,161,162,164,166,167,169,],[15,15,15,-33,15,15,-32,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-12,15,-30,15,15,15,15,15,15,15,15,15,15,15,-18,-29,15,15,15,15,-16,-19,15,15,-1,15,15,15,15,15,15,15,15,15,15,15,-22,-24,15,-3,15,-21,-23,15,15,15,15,]),'EXP':([0,3,8,9,20,28,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,54,55,56,57,58,59,60,61,62,64,69,87,89,90,91,103,104,106,107,108,112,114,119,123,124,131,132,141,142,144,145,147,148,150,152,153,154,156,158,159,161,162,164,166,167,169,],[16,16,16,-33,16,16,-32,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-12,16,-30,16,16,16,16,16,16,16,16,16,16,16,-18,-29,16,16,16,16,-16,-19,16,16,-1,16,16,16,16,16,16,16,16,16,16,16,-22,-24,16,-3,16,-21,-23,16,16,16,16,]),'LOG':([0,3,8,9,20,28,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,54,55,56,57,58,59,60,61,62,64,69,87,89,90,91,103,104,106,107,108,112,114,119,123,124,131,132,141,142,144,145,147,148,150,152,153,154,156,158,159,161,162,164,166,167,169,],[17,17,17,-33,17,17,-32,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-12,17,-30,17,17,17,17,17,17,17,17,17,17,17,-18,-29,17,17,17,17,-16,-19,17,17,-1,17,17,17,17,17,17,17,17,17,17,17,-22,-24,17,-3,17,-21,-23,17,17,17,17,]),'RAND':([0,3,8,9,20,28,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,54,55,56,57,58,59,60,61,62,64,69,87,89,90,91,103,104,106,107,108,112,114,119,123,124,131,132,141,142,144,145,147,148,150,152,153,154,156,158,159,161,162,164,166,167,169,],[18,18,18,-33,18,18,-32,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-12,18,-30,18,18,18,18,18,18,18,18,18,18,18,-18,-29,18,18,18,18,-16,-19,18,18,-1,18,18,18,18,18,18,18,18,18,18,18,-22,-24,18,-3,18,-21,-23,18,18,18,18,]),'PRINT':([0,3,8,9,20,28,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,54,55,56,57,58,59,60,61,62,64,69,87,89,90,91,103,104,106,107,108,112,114,119,123,124,131,132,141,142,144,145,147,148,150,152,153,154,156,158,159,161,162,164,166,167,169,],[19,19,19,-33,19,19,-32,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-12,19,-30,19,19,19,19,19,19,19,19,19,19,19,-18,-29,19,19,19,19,-16,-19,19,19,-1,19,19,19,19,19,19,19,19,19,19,19,-22,-24,19,-3,19,-21,-23,19,19,19,19,]),'NOT':([0,3,8,9,20,28,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,54,55,56,57,58,59,60,61,62,64,69,87,89,90,91,103,104,106,107,108,112,114,119,123,124,131,132,141,142,144,145,147,148,150,152,153,154,156,158,159,161,162,164,166,167,169,],[20,20,20,-33,20,20,-32,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-12,20,-30,20,20,20,20,20,20,20,20,20,20,20,-18,-29,20,20,20,20,-16,-19,20,20,-1,20,20,20,20,20,20,20,20,20,20,20,-22,-24,20,-3,20,-21,-23,20,20,20,20,]),'FUNCTION':([0,8,9,33,50,54,55,87,90,91,104,107,108,112,123,132,142,144,148,152,153,154,158,161,162,166,169,],[21,21,-33,-32,-12,21,-30,21,-18,-29,21,21,-16,-19,-1,21,21,21,21,21,-22,-24,-3,-21,-23,21,21,]),'NUMBER':([0,3,8,9,20,28,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,54,55,56,57,58,59,60,61,62,64,69,87,89,90,91,103,104,106,107,108,112,114,119,123,124,131,132,141,142,144,145,147,148,150,152,153,154,156,158,159,161,162,164,166,167,169,],[22,22,22,-33,22,22,-32,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-12,22,-30,22,22,22,22,22,22,22,22,22,22,22,-18,-29,22,22,22,22,-16,-19,22,22,-1,22,22,22,22,22,22,22,22,22,22,22,-22,-24,22,-3,22,-21,-23,22,22,22,22,]),'PI':([0,3,8,9,20,28,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,54,55,56,57,58,59,60,61,62,64,69,87,89,90,91,103,104,106,107,108,112,114,119,123,124,131,132,141,142,144,145,147,148,150,152,153,154,156,158,159,161,162,164,166,167,169,],[23,23,23,-33,23,23,-32,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-12,23,-30,23,23,23,23,23,23,23,23,23,23,23,-18,-29,23,23,23,23,-16,-19,23,23,-1,23,23,23,23,23,23,23,23,23,23,23,-22,-24,23,-3,23,-21,-23,23,23,23,23,]),'E':([0,3,8,9,20,28,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,54,55,56,57,58,59,60,61,62,64,69,87,89,90,91,103,104,106,107,108,112,114,119,123,124,131,132,141,142,144,145,147,148,150,152,153,154,156,158,159,161,162,164,166,167,169,],[24,24,24,-33,24,24,-32,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-12,24,-30,24,24,24,24,24,24,24,24,24,24,24,-18,-29,24,24,24,24,-16,-19,24,24,-1,24,24,24,24,24,24,24,24,24,24,24,-22,-24,24,-3,24,-21,-23,24,24,24,24,]),'TRUE':([0,3,8,9,20,28,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,54,55,56,57,58,59,60,61,62,64,69,87,89,90,91,103,104,106,107,108,112,114,119,123,124,131,132,141,142,144,145,147,148,150,152,153,154,156,158,159,161,162,164,166,167,169,],[25,25,25,-33,25,25,-32,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-12,25,-30,25,25,25,25,25,25,25,25,25,25,25,-18,-29,25,25,25,25,-16,-19,25,25,-1,25,25,25,25,25,25,25,25,25,25,25,-22,-24,25,-3,25,-21,-23,25,25,25,25,]),'FALSE':([0,3,8,9,20,28,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,54,55,56,57,58,59,60,61,62,64,69,87,89,90,91,103,104,106,107,108,112,114,119,123,124,131,132,141,142,144,145,147,148,150,152,153,154,156,158,159,161,162,164,166,167,169,],[26,26,26,-33,26,26,-32,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-12,26,-30,26,26,26,26,26,26,26,26,26,26,26,-18,-29,26,26,26,26,-16,-19,26,26,-1,26,26,26,26,26,26,26,26,26,26,26,-22,-24,26,-3,26,-21,-23,26,26,26,26,]),'STRING':([0,3,8,9,20,28,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,54,55,56,57,58,59,60,61,62,64,69,87,89,90,91,103,104,106,107,108,112,114,119,123,124,131,132,141,142,144,145,147,148,150,152,153,154,156,158,159,161,162,164,166,167,169,],[27,27,27,-33,27,27,-32,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-12,27,-30,27,27,27,27,27,27,27,27,27,27,27,-18,-29,27,27,27,27,-16,-19,27,27,-1,27,27,27,27,27,27,27,27,27,27,27,-22,-24,27,-3,27,-21,-23,27,27,27,27,]),'$end':([1,9,33,50,90,108,112,123,153,154,158,161,162,],[0,-33,-32,-12,-18,-16,-19,-1,-22,-24,-3,-21,-23,]),'SEMICOLON':([4,6,10,11,12,22,23,24,25,26,27,31,65,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,90,92,101,109,113,115,116,117,118,120,125,126,140,143,151,155,],[33,50,-48,-31,-34,-42,-43,-44,-45,-46,-47,-13,-64,-41,-35,-36,-37,-38,-39,-40,-56,-57,-58,-59,-60,-61,-62,-63,-65,112,-11,-54,33,-20,-49,-50,-51,-52,-55,-17,33,-53,153,161,-2,]),'PLUS':([4,6,10,11,12,22,23,24,25,26,27,29,31,65,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,92,94,96,97,98,99,100,101,102,105,109,111,113,115,116,117,118,120,125,126,128,129,133,140,143,151,155,157,160,163,165,168,171,],[34,-13,-48,-31,-34,-42,-43,-44,-45,-46,-47,34,-13,34,34,-41,-35,-36,-37,-38,-39,-40,34,34,34,34,34,34,34,34,34,34,-11,34,34,34,34,34,34,-54,34,34,34,34,-20,-49,-50,-51,-52,-55,34,34,34,34,34,-53,34,34,34,34,34,34,34,34,34,]),'MINUS':([4,6,10,11,12,22,23,24,25,26,27,29,31,65,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,92,94,96,97,98,99,100,101,102,105,109,111,113,115,116,117,118,120,125,126,128,129,133,140,143,151,155,157,160,163,165,168,171,],[35,-13,-48,-31,-34,-42,-43,-44,-45,-46,-47,35,-13,35,35,-41,-35,-36,-37,-38,-39,-40,35,35,35,35,35,35,35,35,35,35,-11,35,35,35,35,35,35,-54,35,35,35,35,-20,-49,-50,-51,-52,-55,35,35,35,35,35,-53,35,35,35,35,35,35,35,35,35,]),'TIMES':([4,6,10,11,12,22,23,24,25,26,27,29,31,65,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,92,94,96,97,98,99,100,101,102,105,109,111,113,115,116,117,118,120,125,126,128,129,133,140,143,151,155,157,160,163,165,168,171,],[36,-13,-48,-31,-34,-42,-43,-44,-45,-46,-47,36,-13,36,36,-41,36,36,-37,-38,-39,36,36,36,36,36,36,36,36,36,36,36,-11,36,36,36,36,36,36,-54,36,36,36,36,-20,-49,-50,-51,-52,-55,36,36,36,36,36,-53,36,36,36,36,36,36,36,36,36,]),'DIVIDE':([4,6,10,11,12,22,23,24,25,26,27,29,31,65,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,92,94,96,97,98,99,100,101,102,105,109,111,113,115,116,117,118,120,125,126,128,129,133,140,143,151,155,157,160,163,165,168,171,],[37,-13,-48,-31,-34,-42,-43,-44,-45,-46,-47,37,-13,37,37,-41,37,37,-37,-38,-39,37,37,37,37,37,37,37,37,37,37,37,-11,37,37,37,37,37,37,-54,37,37,37,37,-20,-49,-50,-51,-52,-55,37,37,37,37,37,-53,37,37,37,37,37,37,37,37,37,]),'POW':([4,6,10,11,12,22,23,24,25,26,27,29,31,65,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,92,94,96,97,98,99,100,101,102,105,109,111,113,115,116,117,118,120,125,126,128,129,133,140,143,151,155,157,160,163,165,168,171,],[38,-13,-48,-31,-34,-42,-43,-44,-45,-46,-47,38,-13,38,38,-41,38,38,-37,-38,-39,38,38,38,38,38,38,38,38,38,38,38,-11,38,38,38,38,38,38,-54,38,38,38,38,-20,-49,-50,-51,-52,-55,38,38,38,38,38,-53,38,38,38,38,38,38,38,38,38,]),'MOD':([4,6,10,11,12,22,23,24,25,26,27,29,31,65,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,92,94,96,97,98,99,100,101,102,105,109,111,113,115,116,117,118,120,125,126,128,129,133,140,143,151,155,157,160,163,165,168,171,],[39,-13,-48,-31,-34,-42,-43,-44,-45,-46,-47,39,-13,39,39,-41,-35,-36,-37,-38,-39,-40,39,39,39,39,39,39,39,39,39,39,-11,39,39,39,39,39,39,-54,39,39,39,39,-20,-49,-50,-51,-52,-55,39,39,39,39,39,-53,39,39,39,39,39,39,39,39,39,]),'EQ':([4,6,10,11,12,22,23,24,25,26,27,29,31,65,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,92,94,96,97,98,99,100,101,102,105,109,111,113,115,116,117,118,120,125,126,128,129,133,140,143,151,155,157,160,163,165,168,171,],[40,-13,-48,-31,-34,-42,-43,-44,-45,-46,-47,40,-13,40,40,-41,-35,-36,-37,-38,-39,-40,-56,-57,-58,-59,-60,-61,40,40,40,40,-11,40,40,40,40,40,40,-54,40,40,40,40,-20,-49,-50,-51,-52,-55,40,40,40,40,40,-53,40,40,40,40,40,40,40,40,40,]),'GT':([4,6,10,11,12,22,23,24,25,26,27,29,31,65,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,92,94,96,97,98,99,100,101,102,105,109,111,113,115,116,117,118,120,125,126,128,129,133,140,143,151,155,157,160,163,165,168,171,],[41,-13,-48,-31,-34,-42,-43,-44,-45,-46,-47,41,-13,41,41,-41,-35,-36,-37,-38,-39,-40,41,-57,-58,-59,-60,41,41,41,41,41,-11,41,41,41,41,41,41,-54,41,41,41,41,-20,-49,-50,-51,-52,-55,41,41,41,41,41,-53,41,41,41,41,41,41,41,41,41,]),'LT':([4,6,10,11,12,22,23,24,25,26,27,29,31,65,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,92,94,96,97,98,99,100,101,102,105,109,111,113,115,116,117,118,120,125,126,128,129,133,140,143,151,155,157,160,163,165,168,171,],[42,-13,-48,-31,-34,-42,-43,-44,-45,-46,-47,42,-13,42,42,-41,-35,-36,-37,-38,-39,-40,42,-57,-58,-59,-60,42,42,42,42,42,-11,42,42,42,42,42,42,-54,42,42,42,42,-20,-49,-50,-51,-52,-55,42,42,42,42,42,-53,42,42,42,42,42,42,42,42,42,]),'GE':([4,6,10,11,12,22,23,24,25,26,27,29,31,65,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,92,94,96,97,98,99,100,101,102,105,109,111,113,115,116,117,118,120,125,126,128,129,133,140,143,151,155,157,160,163,165,168,171,],[43,-13,-48,-31,-34,-42,-43,-44,-45,-46,-47,43,-13,43,43,-41,-35,-36,-37,-38,-39,-40,43,-57,-58,-59,-60,43,43,43,43,43,-11,43,43,43,43,43,43,-54,43,43,43,43,-20,-49,-50,-51,-52,-55,43,43,43,43,43,-53,43,43,43,43,43,43,43,43,43,]),'LE':([4,6,10,11,12,22,23,24,25,26,27,29,31,65,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,92,94,96,97,98,99,100,101,102,105,109,111,113,115,116,117,118,120,125,126,128,129,133,140,143,151,155,157,160,163,165,168,171,],[44,-13,-48,-31,-34,-42,-43,-44,-45,-46,-47,44,-13,44,44,-41,-35,-36,-37,-38,-39,-40,44,-57,-58,-59,-60,44,44,44,44,44,-11,44,44,44,44,44,44,-54,44,44,44,44,-20,-49,-50,-51,-52,-55,44,44,44,44,44,-53,44,44,44,44,44,44,44,44,44,]),'NE':([4,6,10,11,12,22,23,24,25,26,27,29,31,65,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,92,94,96,97,98,99,100,101,102,105,109,111,113,115,116,117,118,120,125,126,128,129,133,140,143,151,155,157,160,163,165,168,171,],[45,-13,-48,-31,-34,-42,-43,-44,-45,-46,-47,45,-13,45,45,-41,-35,-36,-37,-38,-39,-40,-56,-57,-58,-59,-60,-61,45,45,45,45,-11,45,45,45,45,45,45,-54,45,45,45,45,-20,-49,-50,-51,-52,-55,45,45,45,45,45,-53,45,45,45,45,45,45,45,45,45,]),'AND':([4,6,10,11,12,22,23,24,25,26,27,29,31,65,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,92,94,96,97,98,99,100,101,102,105,109,111,113,115,116,117,118,120,125,126,128,129,133,140,143,151,155,157,160,163,165,168,171,],[46,-13,-48,-31,-34,-42,-43,-44,-45,-46,-47,46,-13,46,46,-41,-35,-36,-37,-38,-39,-40,-56,-57,-58,-59,-60,-61,-62,46,46,46,-11,46,46,46,46,46,46,-54,46,46,46,46,-20,-49,-50,-51,-52,-55,46,46,46,46,46,-53,46,46,46,46,46,46,46,46,46,]),'OR':([4,6,10,11,12,22,23,24,25,26,27,29,31,65,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,92,94,96,97,98,99,100,101,102,105,109,111,113,115,116,117,118,120,125,126,128,129,133,140,143,151,155,157,160,163,165,168,171,],[47,-13,-48,-31,-34,-42,-43,-44,-45,-46,-47,47,-13,47,47,-41,-35,-36,-37,-38,-39,-40,-56,-57,-58,-59,-60,-61,-62,-63,47,47,-11,47,47,47,47,47,47,-54,47,47,47,47,-20,-49,-50,-51,-52,-55,47,47,47,47,47,-53,47,47,47,47,47,47,47,47,47,]),'CONCAT':([4,6,10,11,12,22,23,24,25,26,27,29,31,65,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,92,94,96,97,98,99,100,101,102,105,109,111,113,115,116,117,118,120,125,126,128,129,133,140,143,151,155,157,160,163,165,168,171,],[48,-13,-48,-31,-34,-42,-43,-44,-45,-46,-47,48,-13,48,48,-41,-35,-36,-37,-38,-39,-40,-56,-57,-58,-59,-60,-61,-62,-63,48,48,-11,48,48,48,48,48,48,-54,48,48,48,48,-20,-49,-50,-51,-52,-55,48,48,48,48,48,-53,48,48,48,48,48,48,48,48,48,]),'ELIF':([6,9,10,11,12,22,23,24,25,26,27,31,33,50,65,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,90,92,101,108,109,112,113,115,116,117,118,120,123,125,126,127,133,134,135,137,138,140,153,154,155,158,161,162,168,170,171,172,],[-13,-33,-48,-31,-34,-42,-43,-44,-45,-46,-47,-13,-32,-12,-64,-41,-35,-36,-37,-38,-39,-40,-56,-57,-58,-59,-60,-61,-62,-63,-65,-18,-11,-54,-16,-17,-19,-20,-49,-50,-51,-52,-55,-1,-17,136,139,136,146,-7,149,-4,-53,-22,-24,-2,-3,-21,-23,-8,-5,-9,-6,]),'ELSE':([6,9,10,11,12,22,23,24,25,26,27,31,33,50,65,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,90,92,101,108,109,112,113,115,116,117,118,120,123,125,126,127,133,134,135,137,138,140,153,154,155,158,161,162,168,170,171,172,],[-13,-33,-48,-31,-34,-42,-43,-44,-45,-46,-47,-13,-32,-12,-64,-41,-35,-36,-37,-38,-39,-40,-56,-57,-58,-59,-60,-61,-62,-63,-65,-18,-11,-54,-16,-17,-19,-20,-49,-50,-51,-52,-55,-1,-17,-28,-28,-28,145,-7,148,-4,-53,-22,-24,-2,-3,-21,-23,-8,-5,-9,-6,]),'RBRACE':([9,33,50,54,55,90,91,108,112,123,144,152,153,154,158,161,162,],[-33,-32,-12,90,-30,-18,-29,-16,-19,-1,154,162,-22,-24,-3,-21,-23,]),'ASIGN2':([10,],[56,]),'RPAREN':([10,11,12,22,23,24,25,26,27,29,31,57,63,65,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,92,93,94,95,96,97,98,99,101,102,103,105,113,115,116,117,118,120,121,125,128,129,140,155,157,160,163,165,],[-48,-31,-34,-42,-43,-44,-45,-46,-47,68,-13,-28,101,-64,104,-41,-35,-36,-37,-38,-39,-40,-56,-57,-58,-59,-60,-61,-62,-63,-65,107,-11,113,-27,-26,115,116,117,118,-54,120,122,124,-20,-49,-50,-51,-52,-55,130,-17,-25,140,-53,-2,164,166,167,169,]),'COMA':([10,11,12,22,23,24,25,26,27,31,51,52,57,65,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,92,93,94,95,100,101,103,110,111,113,115,116,117,118,120,121,125,128,140,155,],[-48,-31,-34,-42,-43,-44,-45,-46,-47,-13,88,-15,-28,-64,-41,88,-35,-36,-37,-38,-39,-40,-56,-57,-58,-59,-60,-61,-62,-63,-65,-11,114,-27,-26,119,-54,-28,-14,-10,-20,-49,-50,-51,-52,-55,114,-17,-25,-53,-2,]),'IN':([10,11,12,22,23,24,25,26,27,31,51,52,65,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,92,101,110,111,113,115,116,117,118,120,125,140,155,],[-48,-31,-34,-42,-43,-44,-45,-46,-47,-13,87,-15,-64,-41,106,-35,-36,-37,-38,-39,-40,-56,-57,-58,-59,-60,-61,-62,-63,-65,-11,-54,-14,-10,-20,-49,-50,-51,-52,-55,-17,-53,-2,]),'ASIGN':([53,],[89,]),'ARROW':([122,130,],[131,141,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,8,54,87,104,107,132,142,144,148,152,166,169,],[1,55,91,108,123,127,55,55,91,158,91,170,172,]),'expression':([0,3,8,20,28,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,56,57,58,59,60,61,62,64,69,87,89,103,104,106,107,114,119,124,131,132,141,142,144,145,147,148,150,152,156,159,164,166,167,169,],[4,29,4,65,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,4,92,94,96,97,98,99,100,102,105,109,111,94,4,125,126,128,129,133,143,4,151,4,4,155,157,4,160,4,163,165,168,4,171,4,]),'asig2':([0,3,8,20,28,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,56,57,58,59,60,61,62,64,69,87,89,103,104,106,107,114,119,124,131,132,141,142,144,145,147,148,150,152,156,159,164,166,167,169,],[6,31,6,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,6,31,31,31,31,31,31,31,31,31,6,31,31,6,31,6,31,31,31,31,6,31,6,6,31,31,6,31,6,31,31,31,6,31,6,]),'functionDef':([0,8,54,87,104,107,132,142,144,148,152,166,169,],[9,9,9,9,9,9,9,9,9,9,9,9,9,]),'function':([0,3,8,20,28,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,56,57,58,59,60,61,62,64,69,87,89,103,104,106,107,114,119,124,131,132,141,142,144,145,147,148,150,152,156,159,164,166,167,169,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'factor':([0,3,8,20,28,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,56,57,58,59,60,61,62,64,69,87,89,103,104,106,107,114,119,124,131,132,141,142,144,145,147,148,150,152,156,159,164,166,167,169,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'asigs':([7,32,],[51,70,]),'asig':([7,32,88,],[52,52,110,]),'statements':([8,132,142,],[54,144,152,]),'parameters':([57,103,],[93,121,]),'empty':([57,103,126,127,133,],[95,95,135,138,135,]),'elifsExp':([126,133,],[134,134,]),'elifs':([127,],[137,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> WHILE LPAREN expression RPAREN statement','statement',5,'p_while_statement','my_parser.py',35),
  ('expression -> IF LPAREN expression RPAREN expression elifsExp ELSE expression','expression',8,'p_conditions','my_parser.py',39),
  ('statement -> IF LPAREN expression RPAREN statement elifs ELSE statement','statement',8,'p_conditions_statement','my_parser.py',43),
  ('elifs -> empty','elifs',1,'p_condition_elif','my_parser.py',47),
  ('elifs -> ELIF LPAREN expression RPAREN statement','elifs',5,'p_condition_elif','my_parser.py',48),
  ('elifs -> elifs ELIF LPAREN expression RPAREN statement','elifs',6,'p_condition_elif','my_parser.py',49),
  ('elifsExp -> empty','elifsExp',1,'p_condition_elif_expression','my_parser.py',58),
  ('elifsExp -> ELIF LPAREN expression RPAREN expression','elifsExp',5,'p_condition_elif_expression','my_parser.py',59),
  ('elifsExp -> elifsExp ELIF LPAREN expression RPAREN expression','elifsExp',6,'p_condition_elif_expression','my_parser.py',60),
  ('asig -> ID ASIGN expression','asig',3,'p_asig','my_parser.py',69),
  ('asig2 -> ID ASIGN2 expression','asig2',3,'p_asig2','my_parser.py',73),
  ('statement -> asig2 SEMICOLON','statement',2,'p_asign2_statement','my_parser.py',77),
  ('expression -> asig2','expression',1,'p_asign2_expression','my_parser.py',81),
  ('asigs -> asigs COMA asig','asigs',3,'p_asigs','my_parser.py',85),
  ('asigs -> asig','asigs',1,'p_asigs','my_parser.py',86),
  ('statement -> LET asigs IN statement','statement',4,'p_multivariables','my_parser.py',93),
  ('expression -> LET asigs IN expression','expression',4,'p_multivariables_expression','my_parser.py',97),
  ('statement -> LBRACE statements RBRACE','statement',3,'p_expression_block','my_parser.py',102),
  ('statement -> LBRACE statements RBRACE SEMICOLON','statement',4,'p_expression_block','my_parser.py',103),
  ('function -> ID LPAREN parameters RPAREN','function',4,'p_expression_function','my_parser.py',108),
  ('functionDef -> FUNCTION ID LPAREN parameters RPAREN ARROW expression SEMICOLON','functionDef',8,'p_function_inline','my_parser.py',112),
  ('functionDef -> FUNCTION ID LPAREN RPAREN ARROW expression SEMICOLON','functionDef',7,'p_function_inline','my_parser.py',113),
  ('functionDef -> FUNCTION ID LPAREN parameters RPAREN LBRACE statements RBRACE','functionDef',8,'p_function_full','my_parser.py',120),
  ('functionDef -> FUNCTION ID LPAREN RPAREN LBRACE statements RBRACE','functionDef',7,'p_function_full','my_parser.py',121),
  ('parameters -> parameters COMA expression','parameters',3,'p_parameters','my_parser.py',129),
  ('parameters -> empty','parameters',1,'p_parameters','my_parser.py',130),
  ('parameters -> expression','parameters',1,'p_parameters_expression','my_parser.py',139),
  ('empty -> <empty>','empty',0,'p_empty','my_parser.py',143),
  ('statements -> statements statement','statements',2,'p_statements','my_parser.py',148),
  ('statements -> statement','statements',1,'p_statements','my_parser.py',149),
  ('expression -> function','expression',1,'p_function','my_parser.py',156),
  ('statement -> expression SEMICOLON','statement',2,'p_statement','my_parser.py',160),
  ('statement -> functionDef','statement',1,'p_statement','my_parser.py',161),
  ('expression -> factor','expression',1,'p_expression','my_parser.py',165),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','my_parser.py',170),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','my_parser.py',171),
  ('expression -> expression TIMES expression','expression',3,'p_term_binop','my_parser.py',178),
  ('expression -> expression DIVIDE expression','expression',3,'p_term_binop','my_parser.py',179),
  ('expression -> expression POW expression','expression',3,'p_term_binop','my_parser.py',180),
  ('expression -> expression MOD expression','expression',3,'p_term_binop','my_parser.py',181),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_factor_group','my_parser.py',189),
  ('factor -> NUMBER','factor',1,'p_factor_num_const','my_parser.py',193),
  ('factor -> PI','factor',1,'p_factor_num_const','my_parser.py',194),
  ('factor -> E','factor',1,'p_factor_num_const','my_parser.py',195),
  ('factor -> TRUE','factor',1,'p_factor_num_const','my_parser.py',196),
  ('factor -> FALSE','factor',1,'p_factor_num_const','my_parser.py',197),
  ('factor -> STRING','factor',1,'p_factor_num_const','my_parser.py',198),
  ('factor -> ID','factor',1,'p_factor_num_const','my_parser.py',199),
  ('expression -> SIN LPAREN expression RPAREN','expression',4,'p_factor_func','my_parser.py',215),
  ('expression -> COS LPAREN expression RPAREN','expression',4,'p_factor_func','my_parser.py',216),
  ('expression -> SQRT LPAREN expression RPAREN','expression',4,'p_factor_func','my_parser.py',217),
  ('expression -> EXP LPAREN expression RPAREN','expression',4,'p_factor_func','my_parser.py',218),
  ('expression -> LOG LPAREN expression COMA expression RPAREN','expression',6,'p_factor_func','my_parser.py',219),
  ('expression -> RAND LPAREN RPAREN','expression',3,'p_factor_func','my_parser.py',220),
  ('expression -> PRINT LPAREN expression RPAREN','expression',4,'p_factor_func','my_parser.py',221),
  ('expression -> expression EQ expression','expression',3,'p_factor_binop','my_parser.py',231),
  ('expression -> expression GT expression','expression',3,'p_factor_binop','my_parser.py',232),
  ('expression -> expression LT expression','expression',3,'p_factor_binop','my_parser.py',233),
  ('expression -> expression GE expression','expression',3,'p_factor_binop','my_parser.py',234),
  ('expression -> expression LE expression','expression',3,'p_factor_binop','my_parser.py',235),
  ('expression -> expression NE expression','expression',3,'p_factor_binop','my_parser.py',236),
  ('expression -> expression AND expression','expression',3,'p_factor_logicop','my_parser.py',240),
  ('expression -> expression OR expression','expression',3,'p_factor_logicop','my_parser.py',241),
  ('expression -> NOT expression','expression',2,'p_factor_logineg','my_parser.py',245),
  ('expression -> expression CONCAT expression','expression',3,'p_factor_concat','my_parser.py',250),
]
